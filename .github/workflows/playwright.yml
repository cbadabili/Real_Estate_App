name: Playwright E2E

on:
  pull_request:
  push:
    branches: [main]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: beedab
          POSTGRES_USER: beedab
          POSTGRES_PASSWORD: beedab
        options: >-
          --health-cmd "pg_isready -d beedab -U beedab" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      # checkov:skip=CKV_SECRET_4 Ephemeral CI Postgres service credentials
      DATABASE_URL: postgresql://beedab:beedab@localhost:5432/beedab
      NODE_ENV: development
      FORCE_DB_MIGRATIONS: 'true'
      FORCE_DB_SEED: 'true'
      PLAYWRIGHT_BASE_URL: http://127.0.0.1:5000
      PORT: 5000
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Prepare database
        run: |
          npm run db:push || echo 'drizzle push skipped'
          npm run db:seed || echo 'seed step failed, continuing because server handles seeding'
      - name: Start API server
        run: |
          nohup npm run start >/tmp/server.log 2>&1 &
          ready=0
          for i in {1..30}; do
            if curl -fsS "http://127.0.0.1:${PORT:-5000}/api/health" >/dev/null; then
              ready=1
              break
            fi
            sleep 2
          done
          if [ "$ready" -ne 1 ]; then
            echo "API failed to become healthy within expected time"
            tail -n 200 /tmp/server.log || true
            exit 1
          fi
      - name: Smoke check API
        run: |
          curl -f "http://127.0.0.1:${PORT:-5000}/api/health"
      - name: Run Playwright
        run: npx playwright test --reporter=line,html
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore
      - name: Upload server logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: /tmp/server.log
          if-no-files-found: ignore
